#include <iostream>
#include <thread>
#include <mutex>

std::mutex mtx;
int counter = 0;

void safeIncrement()
{
    for (int i = 0; i < 10000; ++i)
    {
        // 锁定互斥锁
        std::lock_guard<std::mutex> lock(mtx);
        ++counter;
        // 互斥锁会在 lock_guard 析构时自动释放
    }
}

int main()
{
    std::thread t1(safeIncrement);
    std::thread t2(safeIncrement);

    t1.join();
    t2.join();

    std::cout << "Final counter value: " << counter << std::endl;

    return 0;
}
